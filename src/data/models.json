{
  "models": [
    {
      "category": "Supervised Learning",
      "subcategories": [
        {
          "type": "Regression Algorithms",
          "algorithms": [
            {
              "name": "Linear Regression",
              "description": "src/data/models/Linear Regression.txt"
            },
            {
              "name": "Polynomial Regression",
              "description": "src/data/models/Polynomial Regression.txt"
            },
            {
              "name": "Ridge Regression",
              "description": "src/data/models/Ridge Regression.txt"
            },
            {
              "name": "Lasso Regression",
              "description": "src/data/models/Lasso Regression.txt"
            },
            {
              "name": "Elastic Net Regression",
              "description": "src/data/models/Elastic Net Regression.txt"
            },
            {
              "name": "Support Vector Regression (SVR)",
              "description": "src/data/models/Support Vector Regression (SVR).txt"
            },
            {
              "name": "Decision Tree Regression",
              "description": "src/data/models/Decision Tree Regression.txt"
            },
            {
              "name": "Random Forest Regression",
              "description": "src/data/models/Random Forest Regression.txt"
            },
            {
              "name": "Gradient Boosting Regression (e.g., XGBoost, LightGBM, CatBoost)",
              "description": "src/data/models/Gradient Boosting Regression (e.g., XGBoost, LightGBM, CatBoost).txt"
            },
            {
              "name": "Bayesian Regression",
              "description": "src/data/models/Bayesian Regression.txt"
            },
            {
              "name": "K-Nearest Neighbors (KNN) Regression",
              "description": "src/data/models/K-Nearest Neighbors (KNN) Regression.txt"
            }
          ]
        },
        {
          "type": "Classification Algorithms",
          "algorithms": [
            {
              "name": "Logistic Regression",
              "description": "src/data/models/Logistic Regression.txt"
            },
            {
              "name": "Support Vector Machines (SVM)",
              "description": "src/data/models/Support Vector Machines (SVM).txt"
            },
            {
              "name": "K-Nearest Neighbors (KNN) Classification",
              "description": "src/data/models/K-Nearest Neighbors (KNN) Classification.txt"
            },
            {
              "name": "Decision Trees",
              "description": "src/data/models/Decision Trees.txt"
            },
            {
              "name": "Random Forest Classification",
              "description": "src/data/models/Random Forest Classification.txt"
            },
            {
              "name": "Gradient Boosting Machines (GBM)",
              "description": "src/data/models/Gradient Boosting Machines (GBM).txt"
            },
            {
              "name": "AdaBoost",
              "description": "src/data/models/AdaBoost.txt"
            },
            {
              "name": "XGBoost",
              "description": "src/data/models/XGBoost.txt"
            },
            {
              "name": "LightGBM",
              "description": "src/data/models/LightGBM.txt"
            },
            {
              "name": "CatBoost",
              "description": "src/data/models/CatBoost.txt"
            },
            {
              "name": "Naive Bayes",
              "description": "src/data/models/Naive Bayes.txt"
            },
            {
              "name": "Neural Networks (e.g., Multilayer Perceptron)",
              "description": "src/data/models/Neural Networks (e.g., Multilayer Perceptron).txt"
            },
            {
              "name": "Quadratic Discriminant Analysis (QDA)",
              "description": "src/data/models/Quadratic Discriminant Analysis (QDA).txt"
            },
            {
              "name": "Linear Discriminant Analysis (LDA)",
              "description": "src/data/models/Linear Discriminant Analysis (LDA).txt"
            }
          ]
        }
      ]
    },
    {
      "category": "Unsupervised Learning",
      "subcategories": [
        {
          "type": "Clustering Algorithms",
          "algorithms": [
            {
              "name": "K-Means",
              "description": "src/data/models/K-Means.txt"
            },
            {
              "name": "Hierarchical Clustering",
              "description": "src/data/models/Hierarchical Clustering.txt"
            },
            {
              "name": "DBSCAN (Density-Based Spatial Clustering of Applications with Noise)",
              "description": "src/data/models/DBSCAN (Density-Based Spatial Clustering of Applications with Noise).txt"
            },
            {
              "name": "Mean Shift",
              "description": "src/data/models/Mean Shift.txt"
            },
            {
              "name": "Gaussian Mixture Models (GMM)",
              "description": "src/data/models/Gaussian Mixture Models (GMM).txt"
            },
            {
              "name": "BIRCH (Balanced Iterative Reducing and Clustering using Hierarchies)",
              "description": "src/data/models/BIRCH (Balanced Iterative Reducing and Clustering using Hierarchies).txt"
            },
            {
              "name": "Affinity Propagation",
              "description": "src/data/models/Affinity Propagation.txt"
            }
          ]
        },
        {
          "type": "Dimensionality Reduction Algorithms",
          "algorithms": [
            {
              "name": "Principal Component Analysis (PCA)",
              "description": "src/data/models/Principal Component Analysis (PCA).txt"
            },
            {
              "name": "Independent Component Analysis (ICA)",
              "description": "src/data/models/Independent Component Analysis (ICA).txt"
            },
            {
              "name": "t-Distributed Stochastic Neighbor Embedding (t-SNE)",
              "description": "src/data/models/t-Distributed Stochastic Neighbor Embedding (t-SNE).txt"
            },
            {
              "name": "Linear Discriminant Analysis (LDA)",
              "description": "src/data/models/Linear Discriminant Analysis (LDA).txt"
            },
            {
              "name": "Factor Analysis",
              "description": "src/data/models/Factor Analysis.txt"
            },
            {
              "name": "Non-Negative Matrix Factorization (NMF)",
              "description": "src/data/models/Non-Negative Matrix Factorization (NMF).txt"
            },
            {
              "name": "UMAP (Uniform Manifold Approximation and Projection)",
              "description": "src/data/models/UMAP (Uniform Manifold Approximation and Projection).txt"
            }
          ]
        }
      ]
    },
    {
      "category": "Semi-Supervised Learning",
      "algorithms": [
        {
          "name": "Self-training",
          "description": "src/data/models/Self-training.txt"
        },
        {
          "name": "Co-training",
          "description": "src/data/models/Co-training.txt"
        },
        {
          "name": "Generative Adversarial Networks (GANs) for Semi-Supervised Learning",
          "description": "src/data/models/Generative Adversarial Networks (GANs) for Semi-Supervised Learning.txt"
        },
        {
          "name": "Graph-based Semi-Supervised Learning",
          "description": "src/data/models/Graph-based Semi-Supervised Learning.txt"
        }
      ]
    },
    {
      "category": "Reinforcement Learning",
      "algorithms": [
        {
          "name": "Q-Learning",
          "description": "src/data/models/Q-Learning.txt"
        },
        {
          "name": "SARSA (State-Action-Reward-State-Action)",
          "description": "src/data/models/SARSA (State-Action-Reward-State-Action).txt"
        },
        {
          "name": "Deep Q-Networks (DQN)",
          "description": "src/data/models/Deep Q-Networks (DQN).txt"
        },
        {
          "name": "Policy Gradient Methods",
          "description": "src/data/models/Policy Gradient Methods.txt"
        },
        {
          "name": "Actor-Critic Methods",
          "description": "src/data/models/Actor-Critic Methods.txt"
        },
        {
          "name": "Deep Deterministic Policy Gradient (DDPG)",
          "description": "src/data/models/Deep Deterministic Policy Gradient (DDPG).txt"
        },
        {
          "name": "Proximal Policy Optimization (PPO)",
          "description": "src/data/models/Proximal Policy Optimization (PPO).txt"
        },
        {
          "name": "Trust Region Policy Optimization (TRPO)",
          "description": "src/data/models/Trust Region Policy Optimization (TRPO).txt"
        }
      ]
    },
    {
      "category": "Ensemble Learning",
      "algorithms": [
        {
          "name": "Bagging (Bootstrap Aggregating)",
          "description": "src/data/models/Bagging (Bootstrap Aggregating).txt"
        },
        {
          "name": "Random Forest",
          "description": "src/data/models/Random Forest.txt"
        },
        {
          "name": "Boosting (e.g., AdaBoost, Gradient Boosting)",
          "description": "src/data/models/Boosting (e.g., AdaBoost, Gradient Boosting).txt"
        },
        {
          "name": "Stacking",
          "description": "src/data/models/Stacking.txt"
        },
        {
          "name": "Voting Classifier",
          "description": "src/data/models/Voting Classifier.txt"
        },
        {
          "name": "Blending",
          "description": "src/data/models/Blending.txt"
        }
      ]
    },
    {
      "category": "Neural Networks and Deep Learning",
      "algorithms": [
        {
          "name": "Convolutional Neural Networks (CNN)",
          "description": "src/data/models/Convolutional Neural Networks (CNN).txt"
        },
        {
          "name": "Recurrent Neural Networks (RNN)",
          "description": "src/data/models/Recurrent Neural Networks (RNN).txt"
        },
        {
          "name": "Long Short-Term Memory Networks (LSTM)",
          "description": "src/data/models/Long Short-Term Memory Networks (LSTM).txt"
        },
        {
          "name": "Gated Recurrent Unit (GRU)",
          "description": "src/data/models/Gated Recurrent Unit (GRU).txt"
        },
        {
          "name": "Autoencoders",
          "description": "src/data/models/Autoencoders.txt"
        },
        {
          "name": "Generative Adversarial Networks (GANs)",
          "description": "src/data/models/Generative Adversarial Networks (GANs).txt"
        },
        {
          "name": "Transformer Networks",
          "description": "src/data/models/Transformer Networks.txt"
        },
        {
          "name": "BERT (Bidirectional Encoder Representations from Transformers)",
          "description": "src/data/models/BERT (Bidirectional Encoder Representations from Transformers).txt"
        },
        {
          "name": "GPT (Generative Pre-trained Transformer)",
          "description": "src/data/models/GPT (Generative Pre-trained Transformer).txt"
        }
      ]
    },
    {
      "category": "Probabilistic and Statistical Models",
      "algorithms": [
        {
          "name": "Bayesian Networks",
          "description": "src/data/models/Bayesian Networks.txt"
        },
        {
          "name": "Hidden Markov Models (HMM)",
          "description": "src/data/models/Hidden Markov Models (HMM).txt"
        },
        {
          "name": "Markov Chain Monte Carlo (MCMC)",
          "description": "src/data/models/Markov Chain Monte Carlo (MCMC).txt"
        },
        {
          "name": "Gaussian Processes",
          "description": "src/data/models/Gaussian Processes.txt"
        }
      ]
    },
    {
      "category": "Instance-Based Learning",
      "algorithms": [
        {
          "name": "K-Nearest Neighbors (KNN)",
          "description": "src/data/models/K-Nearest Neighbors (KNN).txt"
        },
        {
          "name": "Locally Weighted Learning",
          "description": "src/data/models/Locally Weighted Learning.txt"
        },
        {
          "name": "Case-Based Reasoning",
          "description": "src/data/models/Case-Based Reasoning.txt"
        }
      ]
    },
    {
      "category": "Genetic Algorithms and Evolutionary Computing",
      "algorithms": [
        {
          "name": "Genetic Algorithms (GA)",
          "description": "src/data/models/Genetic Algorithms (GA).txt"
        },
        {
          "name": "Genetic Programming (GP)",
          "description": "src/data/models/Genetic Programming (GP).txt"
        },
        {
          "name": "Evolutionary Strategies (ES)",
          "description": "src/data/models/Evolutionary Strategies (ES).txt"
        },
        {
          "name": "Differential Evolution (DE)",
          "description": "src/data/models/Differential Evolution (DE).txt"
        }
      ]
    },
    {
      "category": "Hybrid Methods",
      "algorithms": [
        {
          "name": "Neural Evolution (combination of neural networks and genetic algorithms)",
          "description": "src/data/models/Neural Evolution (combination of neural networks and genetic algorithms).txt"
        },
        {
          "name": "Neuro-Fuzzy Systems (combination of neural networks and fuzzy logic)",
          "description": "src/data/models/Neuro-Fuzzy Systems (combination of neural networks and fuzzy logic).txt"
        }
      ]
    }
  ]
}
